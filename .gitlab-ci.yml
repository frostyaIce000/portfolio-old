stages:
  - install
  - lint
  - test
  - build
  - container

variables:
  WORKDIR: frontend-angular
  NODE_VERSION: "20"
  IMAGE_NAME: $DOCKER_USERNAME/frontend-angular
  CI_PROJ_CACHE_KEY: "node-${CI_COMMIT_REF_SLUG}"

cache:
  key: "${CI_PROJ_CACHE_KEY}"
  paths:
    - ${WORKDIR}/node_modules

.install_base:
  image: node:${NODE_VERSION}
  before_script:
    - cd ${WORKDIR}
    - node -v
    - npm ci

install:
  stage: install
  extends: .install_base
  script:
    - echo "ok"

lint:
  stage: lint
  extends: .install_base
  script:
    - npm run lint

test:
  stage: test
  image: node:${NODE_VERSION}
  before_script:
    - cd ${WORKDIR}
    - apt-get update
    - apt-get install -y chromium
    - export CHROME_BIN=/usr/bin/chromium
    - npm ci
  script:
    - npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
  artifacts:
    when: always
    reports:
      junit: ${WORKDIR}/junit.xml
    paths:
      - ${WORKDIR}/coverage
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"

build:
  stage: build
  extends: .install_base
  script:
    - npm run build -- --configuration=production
  artifacts:
    paths:
      - ${WORKDIR}/dist
    expire_in: 7 days

docker:
  stage: container
  image: docker:27
  services:
    - docker:27-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - cd ${WORKDIR}
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - docker build -t "$IMAGE_NAME:$CI_COMMIT_SHORT_SHA" -f Dockerfile .
    - docker push "$IMAGE_NAME:$CI_COMMIT_SHORT_SHA"
    - |
      if [ "$CI_COMMIT_BRANCH" = "$CI_DEFAULT_BRANCH" ]; then
        docker tag "$IMAGE_NAME:$CI_COMMIT_SHORT_SHA" "$IMAGE_NAME:latest"
        docker push "$IMAGE_NAME:latest"
      fi
  needs: ["build"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
